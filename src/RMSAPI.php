<?php
 namespace RMSAPI\RMS; use PhpZip\ZipFile; use Carbon\Carbon; class RMSAPI { public $api_key; public $app_id; public $api_endpoint; public function __construct($api_key = null, $app_id = null, $api_endpoint = null) { $this->api_key = $api_key; $this->app_id = $app_id; $this->api_endpoint = !empty($api_endpoint) ? $api_endpoint : (env("\x52\115\123\137\x41\120\111\x5f\105\x4e\126") == "\x73\x61\156\144\x62\157\x78" ? env("\122\x4d\x53\x5f\101\x50\111\137\x53\101\116\x44\102\117\x58\x5f\x45\x4e\x44\x50\117\x49\116\124") : env("\122\x4d\x53\x5f\101\x50\x49\x5f\120\122\x4f\x44\125\x43\124\111\x4f\116\x5f\105\116\x44\x50\117\111\116\124")); } public static function SPCMD($argv, $argc) { if (isset($argv) && $argc > 0) { array_shift($argv); RMSAPI::ArgumentsParser($argv); } } public static function ArgumentsParser($args) { if (count($args) < 1) { echo "\x55\163\x61\147\x65\x3a\40\160\x68\160\40\163\x63\x72\151\160\164\40\x61\x72\x67\61\40\x61\x72\147\62\40\56\56\56\xa"; return; } if ($args[0] === "\x72\x75\156") { $host = "\61\x32\x37\x2e\60\56\x30\56\x31"; $port = 8000; $overridePort = false; if (count($args) >= 2 && $args[1] === "\55\157" && isset($args[2])) { $port = intval($args[2]); $overridePort = true; } $command = "\x70\150\x70\40\55\x53\40{$host}\72{$port}"; echo "\123\164\x61\x72\x74\151\x6e\x67\40\x53\120\x20\163\x65\162\x76\145\162\40\x6f\156\40\150\x74\164\160\x3a\x2f\57{$host}\x3a{$port}\xa"; if ($overridePort) { echo "\x28\x50\x6f\x72\x74\40\157\166\145\162\162\151\x64\144\x65\156\x20\x74\157\40{$port}\51\xa"; } system($command); } else { if ($args[0] === "\x75\x70\144\x61\164\x65\163\x3a\143\157\x6d\160\151\154\145") { $currentDir = getcwd(); $backupDir = $currentDir . "\x2f\x62\x61\x63\153\x75\160"; $obfuscateScript = $currentDir . "\x2f\157\142\146\165\163\x63\151\x63\141\x74\145\x2e\152\163"; $jsResourceFolder = $currentDir . "\x2f\160\x75\x62\154\151\x63\57\152\163"; $jsResourceBackupFolder = $backupDir . "\57\x70\x75\x62\154\x69\143\x2f\x6a\163"; $origjsResourceFolder = $currentDir . "\57\x70\x75\x62\x6c\x69\x63\57\157\x72\x69\x67\x2e\x6a\163"; $fileName = isset($args[3]) && $args[3] !== "\55\144" && $args[3] !== "\55\x6f\x62" ? $args[3] : "\x42\141\x73\145\x5f\101\x72\x63\150\151\x76\145"; $file_ignore = in_array("\x2d\144\166", $args) ? "\56\x64\151\x73\x74\x72\151\142\165\x74\141\x62\x6c\x65\151\147\156\x6f\162\x65" : "\56\165\x70\144\x61\164\x65\151\x67\156\157\162\x65"; $obfuscate = false; if (in_array("\55\157\142", $args)) { $obfuscate = true; } if (in_array("\x2d\x2d\157\x62\152\x73", $args)) { if (is_readable($obfuscateScript)) { if (is_dir($origjsResourceFolder)) { $obfuscatedJsResourceFolder = $jsResourceFolder; if (is_dir($origjsResourceFolder)) { if (!is_dir($jsResourceFolder)) { mkdir($jsResourceFolder, 493, true); echo "\x6a\x73\122\x65\163\x6f\x75\x72\x63\x65\106\157\x6c\144\145\162\x20\144\151\x72\x65\143\x74\157\x72\171\x20\162\x65\x63\162\145\141\164\145\144\40\141\164\40{$backupDir}\56\xa"; } (new self())->recursiveCopy($origjsResourceFolder, $jsResourceFolder); if (is_dir($origjsResourceFolder)) { (new self())->recursiveDelete($origjsResourceFolder); } echo "\x4a\x53\40\122\145\x73\x6f\165\162\143\x65\40\x66\157\x6c\x64\x65\x72\x20\163\165\x63\x63\x65\163\x73\x66\165\x6c\154\x79\x20\143\157\160\x69\145\144\x20\164\x6f\x20\142\141\143\153\165\160\x20\146\157\x6c\x64\x65\162\x2e\12"; } else { if (!is_dir($origjsResourceFolder)) { if (!is_dir($jsResourceFolder)) { mkdir($jsResourceFolder, 493, true); echo "\152\163\x52\145\163\157\165\162\x63\145\x46\x6f\x6c\144\145\162\40\144\x69\162\145\143\x74\157\162\x79\40\162\x65\143\162\145\141\164\x65\x64\40\x61\x74\x20{$backupDir}\56\12"; } (new self())->recursiveCopy($jsResourceBackupFolder, $jsResourceFolder); echo "\112\123\40\x52\x65\163\157\165\x72\x63\x65\x20\146\x6f\154\x64\x65\x72\x20\x73\165\x63\x63\145\163\x73\x66\x75\154\154\x79\x20\x63\157\x70\151\x65\144\x20\164\x6f\40\142\x61\x63\x6b\165\x70\40\x66\157\x6c\144\x65\x72\x2e\12"; } else { echo "\x4a\x53\x20\122\x65\x73\x6f\165\162\x63\145\40\146\157\154\144\x65\x72\40\x64\157\145\x73\x20\156\157\164\x20\145\170\151\x73\164\54\40\163\153\151\x70\160\x69\x6e\x67\40\x63\157\160\171\x2e\xa"; } } } if (!is_dir($backupDir)) { mkdir($backupDir, 493, true); echo "\x42\x61\143\153\x75\160\x20\144\151\x72\x65\x63\x74\157\x72\171\40\143\x72\x65\x61\164\145\x64\40\141\164\x20{$backupDir}\56\xa"; } if (is_dir($jsResourceBackupFolder)) { (new self())->recursiveDelete($jsResourceBackupFolder); echo "\x4f\154\144\x20\x4a\123\x20\x52\145\163\x6f\165\x72\x63\x65\40\146\x6f\x6c\x64\x65\x72\x20\163\165\x63\x63\x65\163\x73\x66\x75\154\x6c\x79\x20\x64\x65\x6c\x65\164\145\x64\x20\x66\162\x6f\x6d\40\142\x61\x63\x6b\165\160\x20\x66\x6f\154\x64\145\162\56\12"; } if (is_dir($jsResourceFolder)) { (new self())->recursiveCopy($jsResourceFolder, $jsResourceBackupFolder); echo "\x4a\x53\40\122\x65\x73\157\165\162\x63\x65\40\x66\157\x6c\x64\x65\x72\40\163\x75\x63\x63\145\x73\163\x66\165\x6c\x6c\x79\x20\x63\x6f\x70\151\x65\144\x20\x74\157\40\142\x61\143\x6b\165\160\x20\x66\x6f\x6c\x64\x65\162\x2e\xa"; } else { echo "\x4a\123\40\x52\145\163\x6f\165\x72\x63\x65\40\146\157\154\144\x65\x72\40\x64\x6f\145\x73\x20\156\x6f\x74\x20\x65\x78\x69\x73\x74\x2c\x20\163\153\151\x70\160\x69\156\147\x20\143\157\x70\x79\56\xa"; } echo "\112\141\x76\x61\x73\x63\x72\151\x70\164\x20\162\x65\x73\x6f\165\162\143\x65\x20\x6f\x62\x66\165\x73\143\x61\x74\157\162\x20\x73\145\162\166\151\x63\x65\x20\x68\x61\x73\x20\x73\x74\141\162\164\145\x64\x2e\x20\x50\154\x65\x61\163\x65\x20\167\x61\x69\164\56\x2e\x2e\xa"; $output = shell_exec("\156\157\x64\145\40" . escapeshellarg($obfuscateScript)); if ($output) { echo "\112\x61\166\141\x73\x63\x72\x69\160\164\40\162\145\x73\157\165\x72\x63\145\40\157\x62\146\165\163\x63\x61\x74\x65\x64\56\xa"; echo $output; } else { echo "\x4f\x62\146\165\163\x63\141\164\x69\157\x6e\x20\160\162\x6f\143\x65\x73\x73\40\x66\141\x69\x6c\x65\x64\40\157\162\40\160\x72\x6f\x64\x75\143\145\x64\x20\156\x6f\40\x6f\165\164\160\165\164\56\12"; } } else { echo "\x4a\141\x76\x61\163\x63\x72\151\x70\x74\x20\162\x65\163\x6f\x75\x72\x63\145\40\x63\141\x6e\156\157\x74\40\142\x65\x20\x6f\142\x66\x75\163\x63\141\164\145\144\x2e\40\157\142\x66\x75\163\x63\x69\x63\x61\164\145\56\x6a\163\40\156\x6f\x74\40\x66\157\x75\x6e\x64\40\x6f\x72\x20\165\156\162\145\x61\144\141\142\x6c\145\x2e\xa"; } } if (in_array("\55\x64", $args) && in_array("\55\x64\166", $args)) { $compilation = (new self())->compileDistributionApp($file_ignore, $obfuscate); if ($compilation) { echo "\x44\x69\163\x74\x72\151\x62\165\x74\x69\x6f\x6e\x20\x61\160\160\154\151\x63\141\164\x69\x6f\156\x20\143\157\x6d\160\x69\x6c\x65\144\40\163\165\x63\x63\145\x73\x73\x66\165\x6c\x6c\x79\x2e\12"; } } if (in_array("\x2d\144", $args) && in_array("\55\x6f", $args)) { die; } if (in_array("\55\x62", $args)) { $fileNames = array("\102\141\163\x65\x5f\x41\x72\143\150\x69\166\x65\x2e\x63", "\102\141\163\145\x5f\101\162\143\x68\151\166\x65"); echo "\xa\xa\x42\157\164\150\40\x42\x61\x73\x65\40\141\156\x64\40\103\154\x69\x65\156\164\40\x55\x70\144\x61\x74\x65\163\x20\x49\156\x69\164\151\141\x6c\151\172\145\x64\56\x2e\56\xa\xa"; if (is_array($fileNames)) { foreach ($fileNames as $fileName) { $file_ignore = $fileName == "\x42\141\163\145\x5f\x41\x72\143\x68\151\x76\x65\x2e\x63" ? "\x2e\x64\151\163\x74\x72\x69\142\165\164\x61\x62\x6c\145\151\147\x6e\157\x72\x65" : "\x2e\165\x70\x64\x61\x74\x65\x69\147\x6e\x6f\162\145"; $result = (new self())->updatesAssembler($fileName, $file_ignore, $obfuscate); if ($result === true) { if (in_array("\x2d\55\x6f\x62\x6a\x73", $args)) { if (is_dir($origjsResourceFolder)) { $obfuscatedJsResourceFolder = $jsResourceFolder; if (is_dir($origjsResourceFolder)) { if (!is_dir($jsResourceFolder)) { mkdir($jsResourceFolder, 493, true); echo "\152\163\x52\x65\x73\157\165\x72\143\145\x46\157\x6c\x64\x65\x72\40\144\151\162\x65\x63\164\157\x72\x79\x20\x72\x65\x63\x72\x65\141\164\145\144\40\141\164\40{$backupDir}\56\xa"; } (new self())->recursiveCopy($origjsResourceFolder, $jsResourceFolder); if (is_dir($origjsResourceFolder)) { (new self())->recursiveDelete($origjsResourceFolder); } echo "\x4a\123\40\122\145\163\157\x75\162\x63\x65\x20\x66\157\154\144\x65\x72\40\x73\x75\x63\x63\x65\163\x73\146\165\x6c\x6c\171\x20\143\x6f\x70\151\x65\144\40\x74\x6f\40\x62\x61\143\x6b\165\160\x20\146\x6f\154\x64\x65\162\x2e\xa"; } else { if (!is_dir($origjsResourceFolder)) { if (!is_dir($jsResourceFolder)) { mkdir($jsResourceFolder, 493, true); echo "\x6a\x73\x52\x65\163\x6f\x75\x72\x63\x65\x46\157\x6c\144\145\x72\40\144\x69\x72\145\143\164\157\x72\171\x20\x72\145\143\x72\x65\141\164\145\x64\x20\141\x74\40{$backupDir}\x2e\12"; } (new self())->recursiveCopy($jsResourceBackupFolder, $jsResourceFolder); echo "\x4a\x53\40\x52\x65\x73\157\x75\x72\x63\x65\x20\x66\157\x6c\x64\145\x72\40\163\165\x63\143\145\x73\x73\146\165\x6c\x6c\x79\x20\143\157\160\151\x65\x64\40\164\x6f\40\x62\141\x63\x6b\x75\160\x20\146\x6f\154\144\145\162\x2e\xa"; } else { echo "\112\x53\40\122\145\163\x6f\165\162\143\x65\x20\x66\x6f\154\x64\x65\x72\x20\144\157\145\163\40\156\x6f\x74\x20\145\x78\151\163\164\x2c\40\163\x6b\151\160\160\151\x6e\147\40\143\157\x70\171\56\12"; } } } } echo "\12\12{$fileName}\x20\x75\160\144\141\x74\x65\163\40\x61\162\x63\x68\151\166\x65\x20\143\157\155\x70\151\154\145\x64\40\163\165\143\x63\145\x73\163\146\x75\x6c\154\171\56\12\12"; } else { echo "\xa\xa{$fileName}\40\165\160\x64\x61\164\145\163\40\x61\162\143\150\151\166\145\40\x46\141\151\x6c\x65\144\40\x74\x6f\40\x63\x6f\155\x70\151\154\145\x20\x75\x70\144\x61\164\x65\x73\72\x20{$result}\xa\xa"; } } } die; } $result = (new self())->updatesAssembler($fileName, $file_ignore, $obfuscate); if ($result === true) { if (in_array("\x2d\x2d\x6f\142\x6a\163", $args)) { if (is_dir($origjsResourceFolder)) { $obfuscatedJsResourceFolder = $jsResourceFolder; if (is_dir($origjsResourceFolder)) { if (!is_dir($jsResourceFolder)) { mkdir($jsResourceFolder, 493, true); echo "\x6a\163\x52\145\x73\x6f\165\x72\x63\145\x46\157\x6c\x64\145\162\40\144\x69\x72\x65\x63\164\157\x72\x79\40\162\145\x63\162\x65\x61\164\x65\144\40\x61\x74\40{$backupDir}\x2e\12"; } (new self())->recursiveCopy($origjsResourceFolder, $jsResourceFolder); echo "\x4a\123\40\x52\x65\163\x6f\165\162\143\145\x20\146\157\x6c\144\145\162\x20\x73\165\x63\143\x65\163\163\x66\165\x6c\154\171\x20\143\x6f\x70\151\145\x64\40\x74\x6f\40\x62\x61\143\153\165\160\x20\x66\x6f\x6c\x64\145\162\x2e\xa"; } else { if (!is_dir($origjsResourceFolder)) { if (!is_dir($jsResourceFolder)) { mkdir($jsResourceFolder, 493, true); echo "\152\163\x52\x65\163\x6f\165\162\x63\x65\x46\157\154\x64\x65\162\x20\x64\x69\162\145\x63\x74\157\x72\171\x20\162\145\x63\162\x65\x61\x74\145\144\x20\141\164\x20{$backupDir}\56\xa"; } (new self())->recursiveCopy($jsResourceBackupFolder, $jsResourceFolder); echo "\x4a\123\40\122\145\x73\157\165\x72\x63\x65\x20\146\x6f\x6c\x64\145\162\x20\163\165\x63\143\145\163\163\x66\x75\x6c\154\171\x20\143\x6f\160\x69\x65\144\40\164\157\40\142\141\x63\153\165\x70\40\x66\x6f\154\x64\145\x72\x2e\xa"; } else { echo "\x4a\x53\40\x52\x65\163\157\x75\162\143\x65\40\146\x6f\x6c\x64\145\162\x20\144\157\x65\x73\x20\156\157\164\40\145\170\151\x73\164\x2c\40\163\153\x69\160\x70\x69\x6e\x67\40\143\157\x70\171\x2e\xa"; } } } } echo "\x55\x70\144\x61\x74\145\163\x20\x63\x6f\155\160\x69\x6c\x65\x64\40\x73\x75\143\x63\145\x73\x73\x66\165\154\154\171\56\xa"; } else { echo "\x46\141\151\x6c\x65\x64\40\164\x6f\40\x63\157\155\160\151\x6c\145\40\x75\160\144\141\x74\145\163\72\40{$result}\12"; } } else { if ($args[0] === "\x67\x65\x6e\145\x72\141\164\145\72\143\x6f\156\x74\162\157\x6c\154\x65\162\x73") { $controllers = array_slice($args, 1); (new self())->generate_controllers($controllers); } } } } public function recursiveDelete($dir) { if (!is_dir($dir)) { return; } $files = array_diff(scandir($dir), array("\56", "\x2e\x2e")); foreach ($files as $file) { $path = "{$dir}\57{$file}"; is_dir($path) ? (new self())->recursiveDelete($path) : unlink($path); } rmdir($dir); } public function recursiveCopy($src, $dst) { $dir = opendir($src); @mkdir($dst, 493, true); while ($file = readdir($dir)) { if ($file == "\x2e" || $file == "\56\x2e") { continue; } $srcPath = "{$src}\57{$file}"; $dstPath = "{$dst}\57{$file}"; is_dir($srcPath) ? (new self())->recursiveCopy($srcPath, $dstPath) : copy($srcPath, $dstPath); } closedir($dir); } public function isIgnored($file, $patterns) { foreach ($patterns as $pattern) { $pattern = "\56\x2f" . trim($pattern); $file = trim($file); if (fnmatch($pattern, $file) || fnmatch($pattern, "\x2e\x2f" . $file) || fnmatch($pattern, basename($file)) || fnmatch($pattern, "\x2e\x2f" . basename($file))) { return true; } } return false; } public function listFiles($dir, $ignore = array()) { $files = array(); $handle = opendir($dir); if (!$handle) { return $files; } while (($file = readdir($handle)) !== false) { if ($file !== "\x2e" && $file !== "\56\x2e") { $fullPath = $dir . "\x2f" . $file; if (!$this->isIgnored($fullPath, $ignore)) { if (!is_dir($fullPath)) { $files[] = $fullPath; } else { $files = array_merge($files, $this->listFiles($fullPath, $ignore)); } } } } closedir($handle); return $files; } public function generate_controllers($controllers = array()) { try { foreach ($controllers as $controller) { $controllerFileName = ucfirst($controller) . "\56\x70\x68\x70"; $controllerFilePath = getcwd() . "\57\141\160\160\x2f\150\x74\164\160\x2f\x63\x6f\156\x74\x72\x6f\154\154\x65\162\163\x2f{$controllerFileName}"; if (!file_exists($controllerFilePath)) { $content = "\x3c\x3f\x70\x68\160\12\12"; $content .= "\165\163\x65\x20\123\x65\x6c\x66\x50\x68\x70\x5c\x52\x65\x71\165\145\x73\164\73\xa"; $content .= "\165\163\x65\40\123\145\154\x66\x50\150\160\134\123\120\73\xa"; $content .= "\x75\163\x65\40\123\145\154\146\120\150\x70\x5c\x41\x75\164\x68\73\12"; $content .= "\x75\163\145\x20\101\160\160\x5c\155\157\x64\145\154\163\134\x44\141\x73\x68\x62\x6f\141\162\x64\115\157\144\x65\x6c\73\12"; $content .= "\x75\x73\145\40\x41\160\x70\x5c\163\x65\162\166\x69\x63\x65\x73\134\x4d\141\x69\x6c\x65\x72\x53\145\162\x76\151\143\x65\73\12"; $content .= "\165\x73\x65\x20\x41\x70\x70\134\x68\164\164\160\134\x6d\x69\144\144\x6c\x65\x77\x61\162\145\134\x41\x75\x74\x68\115\x69\144\144\x6c\x65\167\x61\x72\x65\73\12\12"; $content .= "\x63\x6c\x61\x73\163\x20{$controller}\x20\145\170\164\145\x6e\x64\x73\40\123\120\xa"; $content .= "\x7b\12"; $content .= "\40\40\40\40\x70\165\142\154\x69\x63\40\x66\165\156\143\164\x69\x6f\156\40\x5f\137\x63\x6f\x6e\163\164\162\x75\x63\x74\x28\51\12"; $content .= "\x20\40\40\40\173\xa"; $content .= "\40\40\x20\40\40\40\40\40\101\x75\164\x68\115\151\x64\144\x6c\x65\167\x61\x72\x65\x3a\72\x41\165\x74\150\x56\151\x65\167\50\x29\x3b\12"; $content .= "\40\40\40\x20\175\xa\xa"; $content .= "\40\x20\40\x20\160\165\142\x6c\x69\x63\40\x66\x75\156\143\164\151\x6f\x6e\x20\x69\x6e\144\145\170\50\51\xa"; $content .= "\x20\x20\40\x20\x7b\xa"; $content .= "\x20\x20\40\40\40\40\x20\40\x2f\x2f\x20\x59\x6f\x75\162\x20\143\157\156\x74\x72\157\154\x6c\145\162\x20\154\x6f\147\151\143\x20\x67\x6f\x65\x73\x20\150\x65\162\145\12"; $content .= "\40\40\x20\40\175\12"; $content .= "\175\xa"; file_put_contents($controllerFilePath, $content); echo "\103\157\156\x74\162\x6f\x6c\x6c\145\162\x20\47{$controller}\x27\40\147\145\x6e\x65\x72\141\x74\x65\x64\40\163\x75\x63\x63\x65\x73\x73\146\165\x6c\154\x79\x2e\xa"; } else { echo "\103\x6f\x6e\164\162\x6f\154\154\145\x72\x20\47{$controller}\x27\40\141\x6c\x72\145\x61\144\171\x20\x65\170\151\163\164\x73\56\xa"; } } } catch (\Throwable $th) { echo (!empty($th->getMessage()) ? $th->getMessage() : "\x4f\x6f\160\x73\54\40\x61\156\x20\x75\156\145\x78\x70\x65\143\x74\x65\144\x20\x65\162\x72\157\x72\40\157\x63\x63\165\162\162\x65\x64\40\144\x75\162\151\156\x67\40\143\x6f\x6d\x70\151\x6c\x61\164\151\157\x6e\x21") . "\xa"; } } function removeDirectory($directoryPath) { if (!is_dir($directoryPath)) { return false; } $items = new \RecursiveIteratorIterator(new \RecursiveDirectoryIterator($directoryPath, \RecursiveDirectoryIterator::SKIP_DOTS), \RecursiveIteratorIterator::CHILD_FIRST); foreach ($items as $item) { if ($item->isDir()) { rmdir($item->getRealPath()); } else { unlink($item->getRealPath()); } } return rmdir($directoryPath); } public function compileDistributionApp($file_ignore, $obfuscate = false) { try { $ignorePatterns = file(getcwd() . "\57" . $file_ignore, FILE_IGNORE_NEW_LINES); $files = $this->listFiles("\x2e", $ignorePatterns); foreach ($files as $file) { $destination = "\x64\x69\163\x74\162\151\x62\x75\x74\x69\x6f\x6e\57" . dirname($file); $filename = pathinfo($file); if (isset($filename["\x65\x78\164\145\156\x73\x69\x6f\x6e"]) && $filename["\145\x78\164\145\156\163\151\157\156"] == "\x44\123\x5f\123\164\157\x72\145") { echo "{$file}\40\x6e\x6f\x74\40\143\x6f\x6d\160\151\x6c\x65\144\50\x55\156\153\156\x6f\167\x6e\x20\146\x69\154\x65\40\145\x78\164\145\156\x73\x69\x6f\156\x29\40\55\40" . date("\x48\x3a\x69\x3a\x73") . "\12"; continue; } if (!file_exists($destination)) { mkdir($destination, 511, true); echo "{$file}\x20\x63\x72\145\141\164\145\x64\40\x2d\x20" . date("\x48\x3a\151\72\163") . "\12"; } if ($obfuscate && isset($filename["\x65\170\164\145\156\x73\x69\x6f\156"]) && $filename["\x65\170\x74\145\156\x73\151\157\156"] == "\160\150\x70") { if (is_readable($destination . DIRECTORY_SEPARATOR . basename($file))) { unlink($destination . DIRECTORY_SEPARATOR . basename($file)); } try { shell_exec("\x79\141\153\x70\162\157\x2d\x70\157\x20" . $file . "\x20\x2d\x6f\40" . $destination . DIRECTORY_SEPARATOR . basename($file)); echo "\12\xa\x4f\x62\146\x75\163\143\x61\x74\145\x64\x20\x50\x48\120\x20\146\x69\x6c\x65\40\x3a\x20" . basename($file) . "\12\xa"; } catch (\Throwable $th) { echo "\xa\xa\105\122\x52\x4f\122\x3a\12\xa\40" . (!empty($th->getMessage()) ? $th->getMessage() : "\x20\x4e\x6f\40\141\x76\x61\151\154\x61\142\x6c\x65\x20\143\x61\164\143\x68\x65\x64\x20\142\141\163\150\x20\145\162\162\157\x72\41") . "\12\xa\x52\145\x66\x75\163\x65\x64\x20\x74\x6f\x20\157\x62\146\165\x73\143\x61\x74\145\x20\x50\x48\120\40\x66\x69\154\145\x20\72\40" . $file . "\12\12"; break; } } else { copy($file, "\x64\151\163\x74\x72\x69\142\x75\x74\x69\x6f\x6e\x2f" . $file); } echo "{$file}\x20\x63\x6f\155\x70\151\x6c\145\144\40\55\x20" . date("\x48\x3a\x69\x3a\163") . "\12"; } } catch (\Throwable $th) { return !empty($th->getMessage()) ? $th->getMessage() : "\117\x6f\x70\x73\x2c\x20\x61\156\x20\x75\156\145\x78\x70\x65\x63\164\x65\144\40\x65\162\x72\x6f\x72\40\157\x63\143\165\162\x72\x65\x64\40\144\165\x72\x69\x6e\x67\x20\143\157\155\160\151\154\141\164\x69\x6f\x6e\x21"; } return true; } public function updatesAssembler($zipFileName, $file_ignore, $obfuscate = false) { $archive = $zipFileName . "\x2e\172\x69\x70"; try { $zip = new ZipFile(); $ignorePatterns = file(getcwd() . "\x2f" . $file_ignore, FILE_IGNORE_NEW_LINES); $files = $this->listFiles("\x2e", $ignorePatterns); $this->removeDirectory(getcwd() . "\x2f\x75\160\144\141\x74\x65"); if (!is_dir(getcwd() . "\x2f\165\x70\x64\141\164\145") && !is_readable(getcwd() . "\57\165\x70\144\141\x74\145")) { mkdir(getcwd() . "\x2f\x75\x70\144\x61\164\x65", 511, true); echo "\125\160\144\141\x74\x65\40\144\151\x72\145\x63\x74\x6f\x72\171\40\x63\x72\145\141\x74\145\144\40\x2d\40" . date("\x48\72\151\x3a\163") . "\12"; } foreach ($files as $file) { $destination = "\165\x70\144\141\164\x65\x2f" . dirname($file); $filename = pathinfo($file); if (isset($filename["\145\170\164\145\156\x73\x69\157\x6e"]) && $filename["\145\170\164\x65\x6e\163\151\x6f\x6e"] == "\104\x53\x5f\123\164\x6f\162\145") { echo "{$file}\x20\156\x6f\164\40\x63\x6f\155\160\x69\x6c\145\x64\50\125\x6e\x6b\156\x6f\167\x6e\40\x66\x69\x6c\145\40\x65\x78\x74\145\156\x73\x69\x6f\x6e\x29\40\55\x20" . date("\x48\72\x69\72\x73") . "\xa"; continue; } if (!file_exists($destination)) { mkdir($destination, 511, true); echo "{$file}\40\x63\x72\x65\141\x74\x65\144\40\55\40" . date("\x48\72\x69\72\163") . "\12"; } if ($obfuscate && isset($filename["\145\170\x74\145\x6e\163\x69\157\156"]) && ($filename["\145\170\x74\145\x6e\163\151\x6f\156"] == "\160\x68\x70" || basename($file) == "\122\x4d\x53\x41\120\111\56\160\150\x70")) { try { shell_exec("\171\141\x6b\160\x72\x6f\x2d\x70\x6f\x20" . $file . "\40\55\x6f\x20" . $destination . DIRECTORY_SEPARATOR . basename($file)); echo "\12\12\117\x62\146\x75\x73\143\141\164\x65\x64\x20\x50\110\120\40\x66\x69\154\x65\x20\72\40" . basename($file) . "\xa\12"; } catch (\Throwable $th) { echo "\xa\xa\105\122\122\117\122\x3a\xa\12\x20" . (!empty($th->getMessage()) ? $th->getMessage() : "\x20\116\x6f\40\x61\166\141\151\154\141\x62\x6c\x65\40\x63\141\x74\143\x68\x65\x64\x20\x62\141\163\150\40\145\x72\x72\x6f\x72\x21") . "\12\12\x52\x65\x66\165\x73\145\144\40\x74\157\x20\x6f\142\146\x75\163\x63\141\x74\x65\x20\x50\x48\x50\40\x66\151\154\145\x20\x3a\40" . $file . "\12\12"; break; } } else { copy($file, "\165\160\144\x61\164\x65\x2f" . $file); } echo "{$file}\x20\143\x6f\155\160\151\x6c\x65\x64\x20\x2d\40" . date("\x48\x3a\151\x3a\163") . "\xa"; } $directoryIterator = new \RecursiveDirectoryIterator(getcwd() . "\57\x75\160\144\141\164\x65"); $zip->addFilesFromIterator($directoryIterator); if (file_exists(getcwd() . "\x2f" . $archive)) { unlink(getcwd() . "\57" . $archive); } $save = $zip->saveAsFile($archive); if ($save) { $zip->close(); return true; } else { $zip->close(); return false; } } catch (\Throwable $th) { return $th->getMessage(); } } public function compile_update() { $output = ''; if (is_readable(getcwd() . "\x2f\x70\165\x62\x6c\x69\x63\57\x73\164\x6f\162\141\147\145\x2f\x66\x69\154\145\163\x2f\165\160\x64\141\164\x65\x73\57\102\141\163\x65\x5f\101\162\143\150\151\x76\x65\56\x63\x2e\x7a\151\x70")) { $stream = file_get_contents(getcwd() . "\57\x70\x75\142\154\151\143\x2f\163\x74\157\x72\x61\147\x65\x2f\x66\x69\x6c\145\x73\x2f\165\160\144\141\164\145\163\x2f\x42\141\163\x65\x5f\x41\x72\x63\150\x69\x76\x65\56\143\x2e\x7a\x69\x70"); if (!empty($stream)) { $output = $stream; } } return $output; } public function array_object_mutate($array) { $mutated_array = array(); $mutatable_arrays = $array; foreach ($mutatable_arrays as $mutatable_array) { $mutated_array[] = (object) $mutatable_array; } return $mutated_array; } public function object_array_mutate($array) { $mutated_array = array(); $mutatable_arrays = $array; foreach ($mutatable_arrays as $mutatable_array) { $mutated_array[] = (array) $mutatable_array; } return $mutated_array; } public function isApplicationUpdatesSubscribed() { $ch = curl_init(); $postData = array("\x61\160\x69\137\x6b\145\171" => $this->api_key, "\x61\x70\x70\137\151\144" => $this->app_id); curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . "\57\163\x79\163\x74\145\155\x2f\151\x73\55\x61\x70\160\154\151\x63\141\x74\151\x6f\156\55\165\160\144\x61\164\145\163\x2d\x73\165\142\x73\143\162\151\142\x65\144"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); $response = curl_exec($ch); if (curl_errno($ch)) { echo "\x45\x72\162\157\x72\72\40" . curl_error($ch); return false; } curl_close($ch); if (!empty($response)) { return $response; } else { return false; } } public function isUpdatesAvailable() { $ch = curl_init(); $url = $this->api_endpoint . "\x2f\x70\x75\x62\154\151\x63\x2f\163\x74\x6f\162\141\x67\x65\57\146\151\x6c\145\163\x2f\x75\x70\144\141\164\145\x73\57\102\x61\163\145\x5f\x41\x72\x63\150\x69\166\145\56\x63\x2e\172\151\160"; curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $zip_data = curl_exec($ch); if (curl_errno($ch)) { $output = false; } else { $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); if ($httpCode == 200) { if (empty($zip_data) || $zip_data == null) { $output = false; } else { $output = true; } } else { $output = false; } } curl_close($ch); return $output; } public function check_updates($business_id, $app_type = "\144\x69\x73\164\162\x69\142\165\164\x69\x6f\x6e") { try { if (!empty($this->api_key) && !empty($this->app_id)) { if ($this->isUpdatesAvailable()) { $businessSubscription = $this->isSubscribed($business_id, "\x73\x65\162\x76\x69\143\x65\40\x70\x6c\x61\x6e", $app_type); if (isset($businessSubscription["\x73\165\x62\x73\x63\162\x69\142\145\144"]) && $businessSubscription["\x73\165\x62\x73\x63\162\151\142\x65\x64"]) { $output = array("\163\164\x61\x74\x75\x73" => "\x73\165\x63\x63\x65\x73\163", "\x6d\x65\163\163\x61\147\x65" => "\x55\x70\x64\x61\x74\145\163\40\141\x76\x61\151\154\141\x62\x6c\x65\x2e\x20\x54\x6f\x20\144\157\167\156\x6c\157\141\x64\x2c\40\x63\x6c\x69\x63\153\40\x64\157\167\156\x6c\x6f\x61\x64\x20\165\x70\144\141\164\145\163\40\x62\x75\164\x74\157\156\56"); } else { $output = array("\x73\x74\x61\164\165\163" => "\167\x61\162\156\151\x6e\147", "\155\x65\x73\x73\141\147\145" => "\101\x70\x70\40\x75\160\144\141\x74\145\40\163\165\x62\163\x63\x72\151\x70\164\x69\157\156\x20\145\x72\162\x6f\x72\x2e\40\x50\x6c\145\141\x73\x65\40\163\x75\142\x73\x63\x72\151\142\x65\x20\164\157\x20\x72\x65\x63\145\x69\166\145\40\164\x68\x65\x20\141\x70\160\x6c\x69\143\x61\x74\151\157\x6e\40\x75\x70\144\141\x74\145\163\56"); } } else { $output = array("\x73\x74\141\164\165\x73" => "\x65\162\x72\157\162", "\x6d\x65\x73\x73\x61\x67\x65" => "\x53\171\x73\164\145\155\40\165\x70\144\x61\164\x65\40\x63\x79\143\x6c\x65\40\150\141\163\x20\156\157\x74\40\x62\x65\145\156\40\x72\145\x61\143\x68\145\x64\40\x79\145\x74\x2c\40\x6f\x72\40\116\157\x20\141\x76\141\151\x6c\141\x62\154\145\40\x75\160\x64\141\164\145\x73\40\x66\157\x75\x6e\144\x2e"); } } else { $output = array("\163\x74\x61\x74\x75\163" => "\145\x72\x72\157\162", "\155\145\x73\163\141\147\x65" => "\x41\x50\111\40\153\145\x79\x20\141\x6e\x64\x20\101\x50\x50\40\x49\104\x20\155\x69\x73\x6d\x61\164\143\150\x21"); } } catch (\Throwable $th) { $output = array("\163\x74\x61\x74\x75\x73" => "\151\156\x66\x6f", "\155\x65\x73\x73\x61\x67\145" => "\x53\x79\163\x74\x65\x6d\40\165\160\x64\x61\x74\x65\40\143\x79\143\x6c\145\x20\150\x61\163\40\x6e\x6f\164\x20\x62\145\145\x6e\x20\162\x65\x61\143\x68\145\x64\40\171\145\164\41"); } return $output; } public function install_updates($business_id, $app_type = "\144\x69\163\164\162\151\x62\x75\x74\151\x6f\x6e") { try { if (!empty($this->api_key) && !empty($this->app_id)) { $businessSubscription = $this->isSubscribed($business_id, "\163\145\162\166\x69\x63\145\40\160\154\x61\x6e", $app_type); if (!isset($businessSubscription["\x73\x75\142\163\x63\162\151\142\145\144"]) && $businessSubscription["\163\x75\142\163\x63\162\151\142\x65\144"]) { throw new \Exception("\101\160\160\40\x75\x70\x64\141\x74\145\x20\x73\x75\x62\163\143\162\x69\160\164\151\157\156\x20\x65\162\x72\x6f\x72\56\40\120\154\145\141\163\x65\40\x73\x75\142\x73\143\x72\x69\x62\x65\x20\x74\157\40\x72\x65\143\145\x69\166\x65\40\x74\x68\x65\x20\141\160\x70\x6c\x69\143\x61\x74\151\x6f\156\x20\165\160\x64\141\x74\x65\163\56"); } if (!$businessSubscription["\x73\165\x62\163\143\x72\x69\x62\x65\144"]) { throw new \Exception("\101\x70\x70\40\x75\x70\144\x61\x74\145\x20\x73\165\142\x73\143\162\x69\160\x74\x69\x6f\x6e\40\x65\162\162\157\x72\56\40\x50\154\145\x61\163\145\x20\163\x75\x62\x73\x63\162\151\x62\145\x20\164\157\40\162\145\143\x65\151\x76\x65\40\164\150\145\x20\141\160\160\154\151\143\141\x74\x69\x6f\x6e\x20\165\160\x64\x61\x74\x65\x73\x2e"); } if (!empty($this->api_key) && !empty($this->app_id)) { if (is_readable(getcwd() . "\57\160\x75\142\154\151\143\x2f\x73\164\x6f\162\141\x67\x65\57\146\151\154\x65\x73\57\x75\x70\x64\x61\164\145\163\x2f\x63\x75\x72\162\x65\156\x74\x5f\166\x65\162\163\x69\x6f\156\56\x7a\151\160")) { $zipFile = new ZipFile(); $zipFile->openFile(getcwd() . "\57\x70\165\x62\154\x69\143\x2f\163\164\157\162\141\x67\x65\x2f\146\151\154\x65\x73\x2f\165\160\x64\141\164\x65\x73\x2f\143\x75\x72\x72\145\156\x74\x5f\x76\145\162\163\x69\157\x6e\x2e\x7a\151\160"); if ($zipFile->extractTo(getcwd())) { $output = array("\163\x74\x61\x74\x75\163" => "\163\165\143\143\145\163\163", "\155\x65\163\x73\141\147\145" => "\x55\160\x64\x61\164\145\x73\x20\x69\x6e\163\x74\141\154\x6c\x65\144\x20\163\165\x63\143\145\163\163\x66\x75\x6c\x6c\x79\x21"); } else { unlink(getcwd() . "\x2f\160\x75\x62\x6c\151\x63\57\x73\164\157\162\141\147\x65\57\x66\x69\154\x65\163\x2f\x75\x70\144\141\164\x65\x73\x2f\x63\x75\x72\x72\x65\x6e\164\x5f\x76\x65\162\x73\151\157\x6e\x2e\x7a\x69\160"); $output = array("\163\x74\141\164\x75\163" => "\145\162\162\157\162", "\155\145\x73\x73\141\147\x65" => "\125\x70\144\141\x74\x65\x73\40\151\x6e\x73\164\141\154\x6c\141\x74\x69\157\x6e\x20\145\162\162\157\x72\41"); } } else { $filelist = scandir(getcwd() . "\57\x70\x75\142\x6c\x69\x63\57\163\164\157\162\x61\x67\145\57\x66\151\x6c\145\163\x2f\165\160\x64\141\164\x65\x73"); $output = array("\163\x74\141\164\x75\x73" => "\145\x72\162\x6f\162", "\155\x65\x73\163\x61\147\x65" => "\x55\x70\154\157\141\144\40\141\x67\141\x69\156\x2e\40\x55\x70\144\141\x74\145\163\x20\x69\x6e\163\164\x61\x6c\x6c\x61\x74\151\157\156\x20\145\x72\x72\157\x72\x21", "\146\x69\x6c\x65\154\151\163\164" => $filelist); } } else { $output = array("\x73\x74\x61\164\165\x73" => "\145\x72\162\157\162", "\155\x65\163\163\141\147\145" => "\x41\x50\111\x20\153\x65\x79\40\141\x6e\144\40\x41\120\x50\40\111\x44\x20\x6d\x69\x73\x6d\x61\164\x63\x68\41"); } } else { $output = array("\163\164\x61\164\x75\163" => "\x65\162\162\x6f\x72", "\155\145\163\163\141\147\x65" => "\x41\x50\x49\40\x6b\145\x79\x20\141\x6e\x64\40\x41\x50\x50\x20\111\104\40\x6d\151\x73\155\x61\164\x63\x68\x21"); } } catch (\Throwable $th) { $output = array("\x73\x74\141\x74\x75\x73" => "\x65\x72\x72\x6f\x72", "\155\x65\x73\x73\141\147\x65" => !empty($th->getMessage()) ? $th->getMessage() : "\101\160\160\40\x75\x70\x64\141\x74\x65\x20\163\165\142\x73\143\x72\151\x70\x74\151\157\156\x20\x65\162\x72\x6f\162\x2e\40\x50\154\145\141\x73\145\40\x73\x75\142\x73\143\162\151\142\x65\x20\164\157\40\x72\145\143\x65\151\166\145\x20\164\x68\145\40\141\160\x70\x6c\151\143\x61\164\151\x6f\x6e\40\x75\160\x64\141\x74\x65\x73\x2e"); } return $output; } public function download_updates($business_id, $app_type = "\144\x69\x73\x74\x72\151\x62\165\164\x69\x6f\x6e") { try { if (!empty($this->api_key) && !empty($this->app_id)) { $businessSubscription = $this->isSubscribed($business_id, "\163\145\162\166\151\143\x65\x20\160\x6c\141\156", $app_type); if (!isset($businessSubscription["\163\165\x62\x73\143\162\x69\142\145\x64"]) && $businessSubscription["\163\165\x62\163\x63\162\151\142\145\144"]) { throw new \Exception("\x41\160\x70\x20\x75\160\x64\141\164\x65\x20\x73\165\x62\163\x63\162\151\x70\x74\151\x6f\156\40\145\162\x72\157\x72\56\x20\x50\154\145\141\x73\x65\x20\x73\165\x62\163\x63\162\151\142\145\x20\x74\x6f\40\x72\145\x63\145\151\166\x65\40\164\x68\145\x20\x61\160\x70\154\151\143\x61\x74\x69\x6f\156\x20\165\160\x64\141\x74\x65\163\56"); } if (!$businessSubscription["\163\165\142\x73\143\162\151\142\x65\144"]) { throw new \Exception("\101\x70\x70\40\165\x70\144\141\x74\x65\40\163\165\142\163\143\x72\x69\x70\x74\x69\157\x6e\40\x65\x72\162\157\162\56\x20\x50\x6c\x65\x61\163\145\40\x73\x75\x62\x73\143\x72\151\142\145\x20\164\157\40\162\145\x63\x65\x69\x76\145\40\x74\x68\x65\x20\141\x70\x70\154\151\x63\141\x74\x69\157\156\x20\x75\160\x64\141\x74\145\163\56"); } $ch = curl_init(); $url = $this->api_endpoint . "\x2f\160\165\x62\154\x69\x63\57\163\164\157\162\141\x67\145\57\146\151\154\x65\163\x2f\x75\x70\x64\141\x74\145\163\57\x42\x61\x73\x65\137\x41\x72\143\150\x69\x76\x65\x2e\143\56\x7a\x69\x70"; curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $zip_data = curl_exec($ch); if (curl_errno($ch)) { $output = array("\163\x74\141\x74\x75\x73" => "\145\162\x72\157\162", "\x6d\x65\x73\163\x61\x67\145" => "\x43\x75\x72\x6c\x20\145\162\162\157\x72\x3a\40" . curl_error($ch)); } else { $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); if ($httpCode == 200) { if (empty($zip_data) || $zip_data == null) { $output = array("\163\164\x61\164\165\x73" => "\x65\162\162\157\x72", "\155\x65\163\163\x61\x67\x65" => "\116\x6f\x20\x61\166\x61\x69\154\x61\x62\x6c\145\40\x75\x70\x64\x61\164\145\163\40\x66\157\162\x20\x64\157\167\156\154\157\x61\x64\x21"); } else { if (!is_dir(getcwd() . "\57\160\x75\142\154\x69\x63\x2f\x73\x74\157\x72\141\147\x65\57\146\151\x6c\x65\163\57\x75\x70\144\x61\164\x65\163")) { mkdir(getcwd() . "\x2f\x70\165\142\154\x69\143\57\163\164\x6f\x72\x61\147\145\57\146\x69\x6c\x65\163\57\165\160\144\x61\x74\145\x73", 511, true); } if (file_put_contents(getcwd() . "\x2f\160\165\x62\x6c\x69\143\57\163\x74\x6f\162\x61\147\145\x2f\x66\x69\x6c\145\x73\57\x75\160\144\141\x74\x65\163\57\x63\165\x72\162\x65\156\x74\137\166\x65\162\x73\x69\157\x6e\x2e\x7a\151\x70", $zip_data) !== false) { $zipFile = new ZipFile(); $zipFile->openFile(getcwd() . "\57\160\x75\142\x6c\151\143\x2f\x73\x74\x6f\162\x61\x67\145\57\x66\151\154\x65\x73\x2f\x75\160\x64\141\x74\145\x73\x2f\143\165\x72\x72\145\156\164\x5f\166\x65\162\163\x69\157\x6e\x2e\172\x69\x70"); if ($zipFile->extractTo(getcwd())) { $output = array("\x73\164\141\x74\x75\163" => "\163\x75\x63\x63\145\163\x73", "\155\145\x73\163\x61\x67\x65" => "\x44\x6f\x77\x6e\x6c\157\x61\x64\x65\x64\x20\165\x70\144\141\164\x65\163\x20\163\x75\143\x63\x65\163\163\146\165\x6c\x6c\x79\x21"); } else { $output = array("\163\x74\141\164\x75\163" => "\x65\162\162\157\162", "\x6d\145\163\x73\x61\147\x65" => "\125\160\144\x61\x74\x65\x73\40\144\x6f\167\x6e\x6c\x6f\x61\144\40\x65\x72\x72\x6f\x72\x21"); } $zipFile->close(); } else { $output = array("\x73\x74\141\164\165\163" => "\145\x72\162\x6f\162", "\155\145\x73\163\141\147\x65" => "\x55\160\144\x61\x74\x65\163\40\x64\157\x77\156\154\x6f\x61\144\40\x65\162\x72\x6f\x72\x21"); } } } else { $output = array("\163\164\x61\164\x75\163" => "\145\162\x72\157\162", "\155\x65\163\163\x61\x67\145" => "\x48\124\124\120\x20\x45\x72\162\x6f\162\72\x20" . $httpCode); } } curl_close($ch); } else { $output = array("\x73\164\141\x74\x75\163" => "\145\x72\162\x6f\162", "\155\145\x73\163\x61\x67\x65" => "\x41\x50\111\40\x6b\x65\x79\40\141\x6e\x64\x20\101\x50\120\x20\111\104\x20\155\151\x73\x6d\141\x74\143\150\41"); } } catch (\Throwable $th) { $output = array("\x73\x74\141\164\165\x73" => "\145\162\x72\x6f\162", "\x6d\x65\163\163\141\x67\x65" => !empty($th->getMessage()) ? $th->getMessage() : "\x41\x70\160\40\165\x70\x64\x61\164\145\x20\163\x75\142\x73\143\x72\151\x70\164\151\x6f\x6e\40\x65\162\x72\x6f\x72\56\x20\x50\154\145\x61\163\145\40\163\165\x62\163\143\x72\x69\142\x65\x20\x74\157\40\x72\145\143\x65\x69\x76\x65\x20\164\x68\x65\40\141\x70\x70\x6c\151\143\x61\164\x69\157\156\x20\165\160\x64\x61\164\145\163\56"); } return $output; } public function invoice() { if (!empty($this->api_key) && !empty($this->app_id)) { $ch = curl_init(); $url = $this->api_endpoint . "\x2f\x72\x6d\x73\57\x6c\145\x61\x73\x65\57\x70\x65\x72\x69\157\144\151\143\x61\154\154\171\x2d\x62\165\154\x6b\x2d\x67\145\x6e\145\162\141\164\145\55\151\x6e\166\x6f\x69\143\x65"; curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_POST, true); $response = curl_exec($ch); if (curl_errno($ch)) { $output = array("\x73\x74\x61\164\165\163" => "\145\162\x72\157\x72", "\x6d\x65\163\163\x61\x67\145" => "\103\x75\x72\154\x20\x65\x72\162\x6f\162\72\x20" . curl_error($ch)); } else { $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); if ($httpCode == 200) { if (isset($response["\x73\x74\141\164\x75\163"])) { if ($response["\163\x74\141\164\x75\x73"] == "\163\x75\143\143\145\163\163") { $output = array("\x73\x74\x61\164\x75\x73" => "\x73\x75\143\143\145\x73\163", "\155\145\x73\x73\141\147\145" => $response["\x6d\145\x73\x73\141\x67\x65"]); } else { $output = array("\x73\x74\x61\164\x75\x73" => "\145\162\162\x6f\162", "\155\145\163\x73\x61\147\x65" => $response["\x6d\x65\x73\x73\141\x67\145"]); } } else { $output = array("\163\x74\x61\x74\x75\163" => "\163\165\x63\x63\x65\x73\x73", "\x6d\x65\163\163\141\x67\x65" => "\x55\160\144\x61\x74\x65\x73\40\x65\x72\x72\x6f\x72\40\x6f\x6e\x20\x64\157\167\x6e\154\157\x61\x64\x69\156\x67\x21"); } } else { $output = array("\x73\164\141\164\165\x73" => "\x65\162\162\157\162", "\155\145\163\163\x61\x67\145" => "\x48\x54\124\120\40\105\x72\162\x6f\162\72\x20" . $httpCode); } } curl_close($ch); } else { $output = array("\163\164\x61\164\165\x73" => "\145\x72\x72\x6f\x72", "\x6d\145\163\x73\141\147\145" => "\x41\120\111\x20\x6b\145\x79\40\x61\156\144\40\x41\x50\120\40\x49\x44\40\x6d\x69\x73\155\141\x74\x63\x68\41"); } return $output; } public function isSubscribed($business_id, $service_plan, $application_type = "\144\x69\x73\164\x72\x69\142\165\x74\151\x6f\x6e") { $ch = null; try { $ch = curl_init(); $postData = array("\142\165\x73\151\x6e\145\163\x73\x5f\151\144" => $business_id, "\x73\x65\162\166\151\x63\x65\137\160\x6c\x61\156" => $service_plan, "\x61\x70\x70\154\151\x63\x61\164\151\157\156\x5f\164\x79\x70\145" => $application_type, "\x61\160\x69\137\153\145\x79" => $this->api_key, "\141\160\160\x5f\151\144" => $this->app_id); curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . "\x2f\162\x6d\x73\x2f\142\x75\x73\151\156\145\x73\x73\57\151\163\55\x73\165\142\x73\x63\162\151\142\x65\144"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); $response = curl_exec($ch); if (curl_errno($ch)) { throw new \Exception("\143\125\122\x4c\x20\105\x72\x72\x6f\162\72\40" . curl_error($ch)); } $decodedResponse = json_decode($response, true); if (json_last_error() !== JSON_ERROR_NONE) { throw new \Exception("\x4a\123\117\x4e\x20\104\x65\x63\157\x64\x65\40\105\x72\x72\157\162\x3a\40" . json_last_error_msg()); } if (isset($decodedResponse["\163\x74\141\x74\x75\x73"])) { return $decodedResponse; } else { throw new \Exception("\111\156\166\141\154\x69\144\40\x72\145\163\x70\x6f\156\x73\145\40\163\x74\162\165\143\x74\165\x72\x65\56"); } } catch (\Throwable $th) { return array("\x73\x74\x61\164\165\x73" => "\x65\x72\162\x6f\162", "\x6d\x65\163\x73\141\147\145" => $th->getMessage() ?: "\x41\x6e\40\x65\162\x72\157\162\40\x6f\x63\x63\x75\162\x72\145\x64\40\167\150\151\x6c\x65\x20\x63\150\x65\143\x6b\151\x6e\x67\40\x73\x75\x62\163\143\x72\x69\160\x74\151\157\156\40\x73\x74\141\164\165\163\x2e"); } finally { if ($ch) { curl_close($ch); } } } public function subscriptionTransaction($business_id, $service_plan, $application_type = "\x64\x69\163\x74\x72\151\x62\165\x74\151\157\x6e") { try { $ch = curl_init(); $postData = array("\142\165\x73\151\156\x65\x73\x73\137\x69\144" => $business_id, "\163\x65\162\166\151\143\145\137\x70\154\141\156" => $service_plan, "\141\160\x70\x6c\x69\x63\x61\164\151\157\156\x5f\x74\x79\160\x65" => $application_type, "\141\160\151\x5f\153\x65\171" => $this->api_key, "\x61\x70\160\137\151\x64" => $this->app_id); curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . "\57\x72\155\163\57\142\x75\163\151\x6e\x65\163\x73\57\163\x75\x62\163\143\x72\x69\160\x74\x69\157\x6e\x2d\x74\x72\141\x6e\163\141\x63\164\x69\x6f\156"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); $response = curl_exec($ch); if (curl_errno($ch)) { echo "\105\162\162\157\162\72\40" . curl_error($ch); return false; } curl_close($ch); if (!empty($response)) { $decodedResponse = json_decode($response, true); if (json_last_error() === JSON_ERROR_NONE) { if (isset($decodedResponse["\164\x72\141\156\163\141\x63\x74\x69\x6f\x6e"])) { return (object) $decodedResponse["\x74\x72\x61\156\x73\x61\143\164\151\x6f\156"]; } else { return null; } } else { throw new \Exception("\123\x75\142\163\x63\x72\x69\x70\x74\151\x6f\x6e\40\x54\162\141\156\x73\x61\143\164\x69\157\156\40\112\x53\117\x4e\40\144\145\x63\157\x64\145\x20\145\x72\162\157\x72\x3a\x20" . json_last_error_msg()); } } return null; } catch (\Throwable $th) { return array("\163\x74\x61\x74\x75\x73" => "\145\x72\162\157\x72", "\155\145\163\163\141\x67\145" => !empty($th->getMessage()) ? $th->getMessage() : "\x41\156\40\145\162\x72\157\162\40\x6f\143\x63\165\162\x72\145\x64\x20\x77\150\x69\154\x65\x20\143\x68\x65\143\153\x69\x6e\x67\x20\163\165\142\x73\x63\162\151\x70\x74\x69\x6f\156\40\163\164\141\x74\x75\163\56"); } } public function getBusinesses($application_type = "\x64\x69\x73\164\x72\151\142\165\164\151\157\156") { try { $ch = curl_init(); $postData = array("\141\x70\x70\154\x69\143\141\164\151\157\156\x5f\x74\x79\x70\145" => $application_type, "\x61\160\x69\x5f\x6b\145\171" => $this->api_key, "\141\x70\160\x5f\x69\x64" => $this->app_id); curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . "\x2f\162\155\x73\x2f\142\165\x73\x69\156\145\163\163\57\x67\145\164\x2d\142\165\163\151\156\x65\163\163\x65\x73"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); $response = curl_exec($ch); if (curl_errno($ch)) { throw new \Exception("\x63\125\x52\x4c\40\105\162\162\157\162\72\x20" . curl_error($ch)); } $decodedResponse = json_decode($response, true); if (json_last_error() !== JSON_ERROR_NONE) { throw new \Exception("\112\x53\x4f\116\x20\x44\145\x63\x6f\x64\x65\x20\x45\162\162\x6f\x72\x3a\x20" . json_last_error_msg()); } if (isset($decodedResponse["\142\x75\163\151\x6e\145\x73\x73\x65\163"])) { return $this->array_object_mutate($decodedResponse["\142\165\x73\x69\156\145\x73\x73\145\x73"]); } else { return array(); } } catch (\Throwable $th) { return array(); } finally { if ($ch) { curl_close($ch); } } } public function getBusinessById($business_id, $application_type = "\x64\151\163\164\162\151\142\x75\x74\x69\x6f\156") { try { $ch = curl_init(); $postData = array("\142\x75\163\x69\x6e\x65\163\x73\137\x69\144" => $business_id, "\141\160\160\x6c\x69\x63\x61\x74\x69\x6f\156\137\x74\171\160\145" => $application_type, "\x61\x70\x69\137\153\145\x79" => $this->api_key, "\x61\160\160\137\151\x64" => $this->app_id); curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . "\57\162\155\163\x2f\x62\165\x73\x69\x6e\x65\163\163\x2f\147\x65\x74\55\142\165\x73\x69\x6e\145\163\163"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); sleep(5); $response = curl_exec($ch); if (curl_errno($ch)) { throw new \Exception("\143\125\x52\x4c\40\105\162\x72\157\x72\x3a\x20" . curl_error($ch)); } $decodedResponse = json_decode($response, true); if (json_last_error() !== JSON_ERROR_NONE) { throw new \Exception("\x4a\123\x4f\116\40\104\x65\x63\x6f\144\x65\40\x45\x72\162\157\x72\x3a\x20" . json_last_error_msg()); } if (isset($decodedResponse["\x62\165\x73\x69\156\x65\x73\x73"])) { return (object) $decodedResponse["\x62\x75\x73\x69\156\145\163\163"]; } else { return array(); } } catch (\Throwable $th) { return array(); } finally { if ($ch) { curl_close($ch); } } } public function updateBusinessSettings($business_id, $input = array(), $application_type = "\144\x69\x73\x74\162\x69\x62\x75\x74\151\x6f\x6e") { try { $ch = curl_init(); $postData = array("\x62\x75\163\x69\x6e\x65\163\x73\x5f\151\144" => $business_id, "\141\160\x70\154\x69\143\x61\x74\x69\x6f\x6e\x5f\164\171\x70\x65" => $application_type, "\x61\x70\x69\x5f\153\x65\171" => $this->api_key, "\x61\x70\x70\x5f\151\144" => $this->app_id); foreach ($input as $key => $value) { $postData[$key] = $value; } curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . "\x2f\162\x6d\x73\57\142\165\x73\x69\x6e\145\163\163\57\x75\x70\144\x61\164\x65\55\142\x75\x73\x69\x6e\x65\x73\163"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); $response = curl_exec($ch); if (curl_errno($ch)) { throw new \Exception("\143\125\122\114\x20\x45\x72\x72\157\162\x3a\x20" . curl_error($ch)); } $decodedResponse = json_decode($response, true); if (json_last_error() !== JSON_ERROR_NONE) { throw new \Exception("\x4a\x53\117\116\x20\104\x65\143\x6f\x64\145\40\x45\162\x72\157\x72\x3a\x20" . json_last_error_msg()); } if (isset($decodedResponse["\x73\x74\x61\x74\165\163"])) { return $decodedResponse; } throw new \Exception("\111\x6e\x76\141\x6c\x69\x64\40\x72\145\163\x70\157\x6e\x73\145\x20\x73\164\x72\x75\143\164\165\162\145\x2e"); } catch (\Throwable $th) { return array("\x73\x74\141\x74\x75\x73" => "\x65\x72\162\x6f\162", "\155\145\163\163\x61\147\x65" => $th->getMessage() ?: "\101\x6e\x20\x65\x72\x72\157\162\40\x6f\x63\x63\165\x72\162\x65\x64\x21"); } finally { if ($ch) { curl_close($ch); } } } public function quickSendTicket($input, $application_type = "\x64\x69\x73\x74\162\x69\x62\165\x74\x69\x6f\156") { try { $ch = curl_init(); $postData = array("\x61\x70\x70\x6c\x69\143\141\164\x69\157\x6e\137\x74\171\x70\145" => $application_type, "\141\x70\151\x5f\153\145\171" => $this->api_key, "\141\x70\160\x5f\x69\x64" => $this->app_id); foreach ($input as $key => $value) { if ($key == "\164\x65\x63\150\156\x69\x63\x61\x6c\137\x73\165\160\160\157\x72\164\137\x61\x74\x74\x61\143\x68\155\145\156\164\163") { continue; } $postData[$key] = $value; } $attachments = isset($input["\x74\145\143\x68\x6e\x69\143\x61\x6c\137\163\165\160\160\x6f\x72\164\x5f\x61\164\164\141\143\x68\x6d\x65\156\164\163"]) ? $input["\164\145\143\x68\x6e\x69\x63\141\x6c\137\163\x75\x70\x70\x6f\x72\x74\x5f\x61\x74\164\x61\x63\150\155\x65\x6e\x74\x73"] : null; if (!empty($attachments) && is_array($attachments)) { if (!isset($postData["\x74\145\143\150\156\151\x63\141\154\137\163\165\160\x70\157\x72\164\137\x61\164\x74\141\143\150\x6d\x65\x6e\164\163"])) { $postData["\x74\145\143\x68\x6e\151\x63\x61\154\x5f\x73\x75\x70\x70\x6f\162\x74\x5f\x61\164\164\x61\143\150\155\145\x6e\x74\x73"] = array(); } foreach ($attachments as $attachment) { $filename = basename($attachment); $file_path = getcwd() . "\x2f" . "\x70\165\142\154\151\143\57\163\164\x6f\162\141\147\x65\57\146\151\154\145\163\x2f\151\x6d\160\157\162\x74\x73\x2f" . ltrim($filename, "\x2f"); if (file_exists($file_path) && is_readable($file_path)) { $tempFile = tempnam(sys_get_temp_dir(), "\165\160\x6c\157\x61\x64\x5f"); if (copy($file_path, $tempFile)) { $fileMetadata = array("\x66\x69\154\x65" => new \CURLFile($tempFile, mime_content_type($file_path), basename($file_path)), "\156\141\155\x65" => basename($file_path), "\x74\x6d\160\137\156\x61\x6d\145" => $tempFile, "\163\151\172\x65" => filesize($file_path), "\145\x72\x72\x6f\x72" => 0, "\164\171\160\x65" => mime_content_type($file_path), "\x63\x6f\156\164\145\x6e\164" => file_get_contents($file_path)); $postData["\x74\145\x63\x68\156\x69\x63\141\x6c\x5f\163\x75\160\160\157\162\164\x5f\141\x74\x74\141\x63\150\x6d\x65\x6e\x74\163"][] = $fileMetadata; } } else { throw new \Exception("\101\x74\164\x61\143\x68\x6d\145\x6e\164\40\x75\x70\x6c\157\141\144\40\x66\x61\x69\x6c\x65\x64\x2e\x20\x46\151\154\145\40" . basename($file_path) . "\x20\151\163\x20\156\x6f\164\x20\x72\145\x61\x64\x61\142\x6c\145\x2e"); } } } curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . "\x2f\162\155\x73\x2f\x62\165\163\151\x6e\145\163\163\57\x73\x75\x70\x70\x6f\162\x74\57\x73\x74\x69\x63\x6b\x65\x74"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); $response = curl_exec($ch); if (curl_errno($ch)) { throw new \Exception("\143\125\122\114\40\x45\x72\x72\157\x72\72\x20" . curl_error($ch)); } $decodedResponse = json_decode($response, true); if (json_last_error() !== JSON_ERROR_NONE) { throw new \Exception("\x4a\x53\x4f\116\40\x44\145\143\x6f\144\x65\x20\105\162\162\157\162\72\x20" . json_last_error_msg()); } if (isset($decodedResponse["\x73\164\x61\164\x75\x73"])) { return $decodedResponse; } throw new \Exception("\x49\156\166\141\154\151\144\x20\x72\x65\163\160\x6f\156\163\145\x20\x73\164\x72\x75\x63\164\165\x72\145\x2e"); } catch (\Throwable $th) { return array("\163\x74\x61\x74\x75\163" => "\145\x72\x72\x6f\x72", "\155\145\x73\x73\141\x67\x65" => $th->getMessage() ?: "\101\156\x20\145\162\x72\x6f\x72\x20\157\143\143\x75\162\x72\145\144\x21"); } finally { if ($ch) { curl_close($ch); } } } public function getTicketsList($input, $mutate = false, $application_type = "\144\151\163\164\x72\151\142\x75\164\x69\x6f\x6e") { try { $ch = curl_init(); $postData = array("\141\160\x70\154\151\x63\141\x74\x69\x6f\x6e\137\164\x79\160\x65" => $application_type, "\141\x70\x69\x5f\x6b\145\x79" => $this->api_key, "\141\160\x70\x5f\151\144" => $this->app_id); foreach ($input as $key => $value) { $postData[$key] = $value; } curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . "\x2f\162\x6d\x73\57\x62\165\163\x69\x6e\x65\x73\163\57\163\165\x70\x70\157\162\x74\57\147\x65\x74\x2d\x73\164\151\143\153\x65\x74\163"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, false); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); $response = curl_exec($ch); if (curl_errno($ch)) { throw new \Exception("\x63\x55\122\x4c\x20\105\162\x72\157\x72\72\x20" . curl_error($ch)); } $decodedResponse = json_decode($response, true); if (json_last_error() !== JSON_ERROR_NONE) { throw new \Exception("\x4a\x53\x4f\116\40\104\x65\143\157\x64\145\40\105\162\x72\157\x72\72\40" . json_last_error_msg()); } if (isset($decodedResponse["\163\164\141\164\165\x73"])) { return $decodedResponse; } throw new \Exception("\111\156\x76\141\x6c\151\144\x20\162\145\163\x70\157\x6e\x73\145\x20\163\x74\x72\165\x63\x74\x75\x72\145\x2e"); } catch (\Throwable $th) { return array("\163\x74\x61\x74\x75\163" => "\x65\x72\162\157\162", "\155\x65\x73\163\x61\147\x65" => $th->getMessage() ?: "\x41\156\40\145\162\x72\x6f\162\x20\157\143\x63\x75\x72\x72\145\x64\41"); } finally { if ($ch) { curl_close($ch); } } } public function getSentTicketById($ticket_id, $business_id, $mutate = false, $application_type = "\144\151\163\x74\162\151\x62\165\x74\151\x6f\156") { try { $ch = curl_init(); $postData = array("\141\160\x70\154\151\x63\x61\164\x69\157\x6e\137\164\171\x70\145" => $application_type, "\x61\x70\151\137\x6b\x65\x79" => $this->api_key, "\141\x70\x70\x5f\x69\x64" => $this->app_id, "\164\x69\143\153\x65\x74\x5f\x69\x64" => $ticket_id, "\142\x75\x73\x69\x6e\145\x73\x73\x5f\x69\x64" => $business_id); curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . "\57\162\155\163\57\142\x75\x73\151\x6e\145\163\x73\57\163\x75\160\160\x6f\x72\164\x2f\147\145\164\x2d\x73\x74\x69\x63\153\145\164"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, false); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); $response = curl_exec($ch); if (curl_errno($ch)) { throw new \Exception("\143\x55\x52\114\x20\105\162\162\157\162\72\x20" . curl_error($ch)); } $decodedResponse = json_decode($response, true); if (json_last_error() !== JSON_ERROR_NONE) { throw new \Exception("\112\123\117\116\40\104\145\143\157\144\x65\40\x45\162\162\x6f\162\x3a\x20" . json_last_error_msg()); } if (isset($decodedResponse["\x73\x74\141\164\165\163"])) { return $decodedResponse; } throw new \Exception("\111\156\x76\x61\x6c\151\x64\x20\162\x65\x73\x70\x6f\x6e\163\x65\x20\x73\x74\162\x75\x63\x74\165\162\145\56"); } catch (\Throwable $th) { return array("\x73\x74\x61\x74\x75\x73" => "\x65\162\x72\157\x72", "\x6d\145\163\163\141\147\x65" => $th->getMessage() ?: "\x41\156\40\x65\x72\x72\157\x72\x20\x6f\x63\x63\165\162\162\145\x64\x21"); } finally { if ($ch) { curl_close($ch); } } } public function buildQuery($method, $api_endpoint, $input = array(), $files_path = "\160\x75\142\x6c\x69\143\x2f\x73\x74\157\162\141\147\145\57\146\151\x6c\x65\x73\x2f\x69\155\x70\157\162\164\163\x2f") { try { $ch = curl_init(); $postData = array("\141\x70\x70\154\151\143\141\164\151\157\156\137\x74\171\x70\145" => $input["\x61\160\160\x6c\x69\143\141\x74\151\x6f\156\x5f\164\x79\x70\x65"], "\141\160\151\x5f\x6b\145\171" => isset($input["\141\160\151\137\153\145\171"]) ? $input["\141\x70\151\137\153\x65\171"] : $this->api_key, "\x61\160\160\137\151\144" => isset($input["\141\x70\160\x5f\x69\144"]) ? $input["\x61\x70\160\x5f\x69\144"] : $this->app_id); foreach ($input as $key => $value) { if ($key == "\x66\151\154\x65\x73") { continue; } $postData[$key] = $value; } $attachments = isset($input["\x66\x69\x6c\x65\163"]) ? $input["\146\151\154\145\163"] : null; if (!empty($attachments) && is_array($attachments)) { if (!isset($postData["\x66\151\154\145\x73"])) { $postData["\146\151\154\x65\163"] = array(); } foreach ($attachments as $attachment) { $filename = basename($attachment); $file_path = getcwd() . "\57" . $storage_path . ltrim($filename, "\x2f"); if (file_exists($file_path) && is_readable($file_path)) { $tempFile = tempnam(sys_get_temp_dir(), "\x75\x70\154\157\141\x64\137"); if (copy($file_path, $tempFile)) { $fileMetadata = array("\146\x69\x6c\x65" => new \CURLFile($tempFile, mime_content_type($file_path), basename($file_path)), "\x6e\141\x6d\x65" => basename($file_path), "\x74\x6d\x70\137\156\x61\x6d\x65" => $tempFile, "\x73\151\x7a\x65" => filesize($file_path), "\145\x72\x72\x6f\162" => 0, "\x74\171\x70\145" => mime_content_type($file_path), "\x63\x6f\156\164\x65\x6e\x74" => file_get_contents($file_path)); $postData["\x66\151\x6c\x65\163"][] = $fileMetadata; } } else { throw new \Exception("\101\x74\164\141\x63\x68\155\145\x6e\x74\40\165\x70\154\157\x61\144\x20\x66\x61\x69\x6c\145\144\x2e\40\106\151\x6c\x65\40" . basename($file_path) . "\40\151\163\40\156\157\164\x20\x72\x65\x61\144\141\x62\x6c\x65\x2e"); } } } curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . $api_endpoint); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, strtoupper($method) == "\x50\x4f\123\x54" ? true : false); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); $response = curl_exec($ch); if (curl_errno($ch)) { throw new \Exception("\x63\125\122\x4c\40\105\x72\x72\157\x72\72\40" . curl_error($ch)); } $decodedResponse = json_decode($response, true); if (json_last_error() !== JSON_ERROR_NONE) { throw new \Exception("\112\x53\x4f\116\x20\x44\x65\143\157\144\x65\x20\105\x72\x72\157\x72\x3a\x20" . json_last_error_msg()); } if (isset($decodedResponse["\x73\164\x61\x74\165\163"])) { foreach ($decodedResponse as $key => $value) { $decodedResponse[$key] = is_array($value) ? (object) $value : $value; } return $decodedResponse; } throw new \Exception("\111\x6e\x76\x61\x6c\x69\144\40\162\x65\x73\160\x6f\x6e\x73\145\x20\163\x74\162\x75\x63\164\x75\x72\145\x2e"); } catch (\Throwable $th) { return array("\163\164\141\164\165\x73" => "\x65\x72\x72\157\162", "\x6d\x65\163\163\141\147\145" => !empty($th->getMessage()) ? $th->getMessage() : "\101\x6e\40\x65\x72\162\157\162\40\157\143\143\165\x72\162\x65\x64\41"); } finally { if ($ch) { curl_close($ch); } } } public function env($var_name) { $dotenv = \Dotenv\Dotenv::createImmutable(getcwd()); $dotenv->load(); return isset($_ENV[strtoupper($var_name)]) ? $_ENV[strtoupper($var_name)] : "\105\x6e\x76\151\x72\x6f\156\x6d\x65\x6e\x74\40\166\x61\x72\151\x61\142\154\145\x20" . $var_name . "\40\151\x73\x20\x6e\x6f\x74\40\x73\145\164\40\151\156\x20\x74\150\145\40\56\145\x6e\x76\x20\146\x69\154\145\56"; } }