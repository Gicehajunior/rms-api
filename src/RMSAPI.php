<?php
    namespace RMSAPI\RMS; use PhpZip\ZipFile; use Carbon\Carbon; class RMSAPI { public $api_key; public $app_id; public $api_endpoint; public function __construct($api_key = null, $app_id = null) { $this->api_key = $api_key; $this->app_id = $app_id; $this->api_endpoint = "\150\164\164\x70\163\x3a\x2f\57\x72\x6d\163\x2d\x76\x31\x2e\x64\141\160\150\x61\163\143\157\x6d\160\165\164\145\162\143\157\x6e\163\x75\x6c\x74\141\x6e\164\163\x2e\x63\x6f\155"; } public static function SPCMD($argv, $argc) { if (isset($argv) && $argc > 0) { array_shift($argv); RMSAPI::ArgumentsParser($argv); } } public static function ArgumentsParser($args) { if (count($args) < 1) { echo "\125\163\141\147\x65\x3a\x20\x70\150\160\40\163\x63\x72\x69\160\164\40\x61\162\x67\x31\x20\x61\162\147\62\x20\56\x2e\56\12"; return; } if ($args[0] === "\162\165\156") { $host = "\61\x32\x37\56\x30\56\x30\x2e\61"; $port = 8000; $overridePort = false; if (count($args) >= 2 && $args[1] === "\x2d\x6f" && isset($args[2])) { $port = intval($args[2]); $overridePort = true; } $command = "\x70\150\x70\40\x2d\x53\40{$host}\x3a{$port}"; echo "\x53\164\x61\x72\164\151\x6e\147\40\x53\120\40\x73\145\162\166\145\x72\x20\157\156\x20\150\164\x74\160\72\57\57{$host}\x3a{$port}\12"; if ($overridePort) { echo "\50\x50\157\162\164\40\x6f\x76\145\x72\162\x69\x64\144\145\156\x20\x74\157\x20{$port}\x29\xa"; } system($command); } else { if ($args[0] === "\x75\160\144\x61\164\145\163\x3a\x63\157\155\160\x69\x6c\145") { $zipFileName = isset($args[3]) ? $args[3] : "\x42\x61\163\x65\x5f\x41\x72\143\x68\x69\166\145"; $handler = new self(); $result = $handler->updatesAssembler($zipFileName); if ($result === true) { echo "\125\x70\144\x61\164\x65\x73\40\143\157\155\160\151\154\145\x64\40\x73\165\143\143\x65\x73\163\x66\165\154\x6c\171\56\12"; } else { echo "\106\x61\151\x6c\x65\144\40\x74\157\40\143\x6f\x6d\x70\151\x6c\x65\x20\165\x70\144\141\164\145\163\72\x20{$result}\xa"; } } else { if ($args[0] === "\x67\145\x6e\x65\x72\141\164\x65\x3a\143\157\x6e\x74\162\x6f\154\x6c\x65\x72\x73") { $controllers = array_slice($args, 1); $handler = new self(); $result = $handler->generate_controllers($controllers); echo $result . "\xa"; } } } } public function isIgnored($file, $patterns) { foreach ($patterns as $pattern) { $pattern = "\x2e\x2f" . trim($pattern); $file = trim($file); if (fnmatch($pattern, $file) || fnmatch($pattern, "\56\57" . $file) || fnmatch($pattern, basename($file)) || fnmatch($pattern, "\56\57" . basename($file))) { return true; } } return false; } public function listFiles($dir, $ignore = array()) { $files = array(); $handle = opendir($dir); if (!$handle) { return $files; } while (($file = readdir($handle)) !== false) { if ($file !== "\x2e" && $file !== "\56\56") { $fullPath = $dir . "\57" . $file; if (!$this->isIgnored($fullPath, $ignore)) { if (!is_dir($fullPath)) { $files[] = $fullPath; } else { $files = array_merge($files, $this->listFiles($fullPath, $ignore)); } } } } closedir($handle); return $files; } public function generate_controllers($controllers = array()) { foreach ($controllers as $controller) { $controllerFileName = ucfirst($controller) . "\x2e\160\150\x70"; $controllerFilePath = getcwd() . "\x2f\141\x70\x70\x2f\x68\x74\164\x70\x2f\x63\157\x6e\x74\x72\x6f\x6c\x6c\145\x72\x73\57{$controllerFileName}"; if (!file_exists($controllerFilePath)) { $content = "\74\x3f\x70\x68\160\xa\xa"; $content .= "\x75\163\145\40\123\145\154\146\x50\x68\x70\134\x52\145\x71\x75\x65\163\164\x3b\xa"; $content .= "\x75\163\145\x20\123\145\154\x66\x50\150\160\134\x53\x50\x3b\xa"; $content .= "\165\x73\x65\40\123\145\154\x66\120\150\160\x5c\101\x75\x74\150\73\xa"; $content .= "\x75\163\x65\40\101\160\x70\x5c\x6d\157\x64\145\154\x73\x5c\x44\141\163\150\142\x6f\x61\x72\144\115\x6f\144\x65\154\x3b\12"; $content .= "\x75\163\145\40\101\160\160\x5c\x73\x65\162\x76\x69\143\145\163\134\115\141\151\154\x65\x72\123\145\162\166\151\143\x65\73\12"; $content .= "\165\x73\145\x20\x41\x70\160\x5c\x68\164\164\x70\134\155\151\x64\x64\x6c\145\x77\141\162\145\x5c\101\165\164\150\115\151\144\144\x6c\145\x77\141\162\x65\x3b\xa\xa"; $content .= "\143\154\x61\x73\163\x20{$controller}\x20\145\170\x74\145\x6e\144\x73\40\123\x50\xa"; $content .= "\173\xa"; $content .= "\x20\x20\x20\40\x70\165\142\154\x69\x63\40\x66\x75\156\143\x74\151\x6f\156\40\x5f\137\143\x6f\x6e\163\x74\x72\x75\x63\164\x28\51\12"; $content .= "\40\x20\x20\x20\x7b\xa"; $content .= "\40\40\x20\x20\x20\x20\40\x20\101\x75\x74\150\115\x69\144\x64\x6c\145\x77\141\162\x65\72\72\101\x75\164\x68\x56\x69\x65\167\x28\x29\73\12"; $content .= "\40\x20\40\x20\175\12\12"; $content .= "\x20\x20\40\40\x70\165\x62\x6c\x69\143\40\x66\165\x6e\143\x74\x69\157\x6e\x20\x69\x6e\144\145\x78\50\51\12"; $content .= "\40\40\x20\40\x7b\xa"; $content .= "\40\40\x20\x20\x20\x20\x20\x20\x2f\x2f\x20\131\x6f\x75\162\x20\143\157\x6e\164\162\157\154\154\x65\x72\40\x6c\x6f\147\151\x63\x20\147\157\x65\x73\40\x68\x65\x72\145\12"; $content .= "\x20\x20\40\40\175\xa"; $content .= "\175\xa"; file_put_contents($controllerFilePath, $content); echo "\103\157\x6e\164\162\157\154\x6c\x65\x72\x20\47{$controller}\47\x20\x67\x65\x6e\145\162\141\x74\145\144\40\163\x75\143\143\x65\163\163\146\x75\x6c\x6c\171\56\12"; } else { echo "\x43\157\156\x74\x72\x6f\x6c\x6c\x65\162\x20\47{$controller}\x27\40\141\154\162\x65\141\144\x79\x20\145\x78\x69\163\164\x73\56\12"; } } } function removeDirectory($directoryPath) { if (!is_dir($directoryPath)) { return false; } $items = new \RecursiveIteratorIterator(new \RecursiveDirectoryIterator($directoryPath, \RecursiveDirectoryIterator::SKIP_DOTS), \RecursiveIteratorIterator::CHILD_FIRST); foreach ($items as $item) { if ($item->isDir()) { rmdir($item->getRealPath()); } else { unlink($item->getRealPath()); } } return rmdir($directoryPath); } public function updatesAssembler($zipFileName) { $zipFileName = $zipFileName . "\x2e\x7a\151\x70"; try { $zip = new ZipFile(); $ignorePatterns = file(getcwd() . "\x2f\x2e\x75\160\144\141\164\145\x69\147\156\x6f\162\145", FILE_IGNORE_NEW_LINES); $files = $this->listFiles("\x2e", $ignorePatterns); $dirRemove = $this->removeDirectory(getcwd() . "\57\x75\x70\144\x61\164\145"); foreach ($files as $file) { $destination = "\x75\x70\144\141\x74\145\57" . dirname($file); if (!file_exists($destination)) { mkdir($destination, 511, true); } copy($file, "\x75\x70\x64\141\x74\145\x2f" . $file); } $directoryIterator = new \RecursiveDirectoryIterator(getcwd() . "\57\x75\x70\144\x61\x74\x65"); $zip->addFilesFromIterator($directoryIterator); if (file_exists(getcwd() . "\x2f" . $zipFileName)) { unlink(getcwd() . "\57" . $zipFileName); } $save = $zip->saveAsFile($zipFileName); if ($save) { $zip->close(); return true; } else { $zip->close(); return false; } } catch (\Throwable $th) { return $th->getMessage(); } } public function compile_update() { $output = ''; if (is_readable(getcwd() . "\x2f\160\x75\x62\154\151\x63\57\x73\x74\157\162\x61\147\x65\x2f\146\151\154\x65\x73\x2f\165\x70\x64\x61\164\x65\x73\x2f\101\x72\143\x68\x69\x76\145\56\172\x69\x70")) { $stream = file_get_contents(getcwd() . "\x2f\x70\165\x62\154\151\x63\57\163\164\157\x72\x61\147\145\57\146\151\x6c\x65\x73\57\165\x70\x64\x61\x74\x65\163\x2f\101\x72\143\150\x69\166\x65\56\172\151\x70"); if (!empty($stream)) { $output = $stream; } } return $output; } public function isApplicationUpdatesSubscribed() { $ch = curl_init(); $postData = array("\141\160\x69\x5f\x6b\x65\171" => $this->api_key, "\x61\160\160\137\151\x64" => $this->app_id); curl_setopt($ch, CURLOPT_URL, $this->api_endpoint . "\57\x73\171\x73\x74\x65\x6d\57\151\x73\55\x61\160\160\x6c\151\x63\x61\164\151\x6f\156\55\x75\x70\x64\141\164\145\163\x2d\x73\165\x62\163\143\x72\x69\142\145\144"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData)); $response = curl_exec($ch); if (curl_errno($ch)) { echo "\105\x72\x72\157\162\72\40" . curl_error($ch); return false; } curl_close($ch); if (!empty($response)) { return $response; } else { return false; } } public function isUpdatesAvailable() { $ch = curl_init(); $url = $this->api_endpoint . "\57\x70\x75\142\x6c\151\x63\57\163\x74\157\x72\x61\x67\x65\x2f\x66\151\x6c\145\163\57\x75\160\144\141\164\145\163\x2f\x41\x72\x63\150\151\x76\x65\56\172\151\160"; curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $zip_data = curl_exec($ch); if (curl_errno($ch)) { $output = false; } else { $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); if ($httpCode == 200) { if (empty($zip_data) || $zip_data == null) { $output = false; } else { $output = true; } } else { $output = false; } } curl_close($ch); return $output; } public function check_updates() { try { if (!empty($this->api_key) && !empty($this->app_id)) { if ($this->isUpdatesAvailable()) { $isSubscribed = json_decode($this->isApplicationUpdatesSubscribed(), true); if (isset($isSubscribed["\151\x73\x5f\x73\165\142\x73\x63\162\151\142\x65\144"]) && $isSubscribed["\151\163\x5f\x73\x75\x62\163\143\x72\x69\142\x65\144"]) { $output = array("\x73\164\x61\164\165\163" => "\x73\165\143\x63\x65\163\x73", "\155\x65\x73\x73\x61\x67\x65" => "\x55\160\144\x61\x74\145\x73\x20\x61\166\141\x69\x6c\x61\142\x6c\145\56\40\x54\x6f\x20\x64\x6f\x77\156\154\157\x61\x64\54\x20\x63\x6c\151\143\153\x20\x64\157\x77\x6e\154\157\x61\x64\x20\x75\x70\x64\141\x74\x65\163\x20\x62\x75\164\164\x6f\156\56"); } else { $output = array("\x73\164\x61\164\x75\163" => "\167\141\162\156\151\x6e\x67", "\155\145\163\163\141\147\145" => "\101\x70\160\x20\165\160\x64\x61\164\145\40\163\x75\x62\x73\143\x72\x69\x70\164\x69\157\156\x20\145\x72\x72\x6f\x72\x2e\x20\x50\154\x65\x61\x73\145\x20\163\165\x62\163\x63\162\151\142\x65\40\x74\157\40\162\145\x63\x65\151\166\145\40\x74\x68\x65\40\141\160\160\154\x69\x63\x61\x74\151\157\156\40\x75\160\144\141\164\145\163\x2e"); } } else { $output = array("\163\164\141\164\x75\x73" => "\x65\162\x72\x6f\x72", "\155\x65\163\x73\141\147\x65" => "\x53\x79\163\164\x65\155\x20\x75\160\x64\141\x74\x65\x20\143\x79\143\154\145\40\150\x61\x73\40\156\157\164\x20\142\x65\x65\x6e\40\x72\145\141\143\x68\145\x64\40\x79\145\164\x2c\40\157\162\40\x4e\x6f\40\x61\x76\x61\x69\154\x61\142\x6c\x65\40\165\160\x64\x61\164\145\163\40\x66\157\x75\156\x64\x2e"); } } else { $output = array("\163\164\141\x74\165\163" => "\145\x72\162\157\162", "\x6d\x65\x73\x73\x61\x67\x65" => "\x41\120\111\40\x6b\x65\171\40\141\x6e\144\x20\101\x50\120\40\111\x44\40\x6d\x69\163\x6d\141\x74\143\x68\41"); } } catch (\Throwable $th) { $output = array("\x73\x74\x61\164\x75\163" => "\x69\156\x66\157", "\x6d\145\x73\163\141\147\145" => "\x53\171\x73\x74\145\155\40\165\x70\x64\141\x74\145\40\x63\x79\x63\x6c\145\40\x68\x61\163\x20\x6e\x6f\x74\40\142\145\145\x6e\40\x72\145\141\x63\150\x65\x64\40\x79\x65\164\41"); } return $output; } public function install_updates() { if (!empty($this->api_key) && !empty($this->app_id)) { if (!empty($this->api_key) && !empty($this->app_id)) { if (is_readable(getcwd() . "\x2f\x70\x75\x62\x6c\151\143\x2f\x73\164\157\x72\x61\x67\x65\x2f\146\x69\x6c\145\163\x2f\x75\x70\x64\x61\x74\145\163\57\x63\x75\162\162\145\x6e\164\137\x76\145\x72\163\x69\x6f\156\56\172\151\160")) { $zipFile = new ZipFile(); $zipFile->openFile(getcwd() . "\57\x70\165\142\154\x69\x63\x2f\163\164\x6f\x72\141\x67\145\x2f\146\x69\154\145\163\57\165\160\x64\141\164\x65\x73\57\143\x75\x72\162\x65\156\164\x5f\166\x65\x72\x73\x69\x6f\156\56\172\151\160"); if ($zipFile->extractTo(getcwd())) { $output = array("\163\x74\x61\x74\165\163" => "\x73\x75\143\143\145\163\163", "\155\x65\163\163\141\147\145" => "\x55\x70\x64\x61\164\x65\163\x20\x69\x6e\x73\x74\141\154\x6c\145\144\40\163\165\143\143\x65\163\163\x66\x75\x6c\x6c\x79\41"); } else { unlink(getcwd() . "\x2f\x70\165\142\154\x69\x63\x2f\163\164\157\162\141\147\145\x2f\x66\x69\154\145\163\x2f\x75\160\x64\141\164\x65\163\57\x63\x75\162\x72\145\x6e\164\137\166\145\162\163\151\x6f\x6e\56\172\x69\160"); $output = array("\x73\x74\x61\164\165\163" => "\x65\162\x72\157\x72", "\155\x65\x73\x73\141\x67\145" => "\x55\x70\x64\141\x74\x65\163\x20\x69\156\163\164\x61\154\154\x61\164\151\157\x6e\40\x65\162\162\x6f\162\41"); } } else { $filelist = scandir(getcwd() . "\x2f\x70\165\142\154\x69\143\57\163\164\x6f\162\141\x67\x65\57\x66\x69\x6c\x65\x73\57\x75\160\144\141\x74\x65\x73"); $output = array("\163\x74\141\x74\x75\163" => "\145\x72\162\x6f\162", "\x6d\x65\x73\x73\x61\x67\x65" => "\x55\x70\154\x6f\x61\144\40\141\147\141\151\156\56\40\x55\160\x64\x61\x74\x65\x73\x20\x69\156\163\164\141\x6c\154\x61\164\x69\x6f\156\x20\145\x72\x72\x6f\x72\41", "\x66\151\154\145\154\151\163\164" => $filelist); } } else { $output = array("\163\x74\x61\x74\x75\163" => "\x65\162\x72\x6f\162", "\x6d\x65\x73\x73\x61\x67\145" => "\x41\120\111\x20\153\x65\x79\x20\141\x6e\x64\40\x41\120\120\x20\111\104\x20\x6d\x69\163\x6d\141\164\x63\x68\41"); } } else { $output = array("\163\164\141\164\x75\163" => "\x65\162\x72\x6f\x72", "\155\145\x73\163\x61\x67\145" => "\101\120\x49\x20\153\x65\171\x20\x61\x6e\144\40\x41\x50\120\40\111\104\x20\155\x69\x73\155\141\164\143\x68\41"); } return $output; } public function download_updates() { if (!empty($this->api_key) && !empty($this->app_id)) { $ch = curl_init(); $url = $this->api_endpoint . "\x2f\160\x75\x62\x6c\x69\x63\57\x73\164\157\162\x61\147\x65\x2f\x66\x69\154\x65\x73\57\x75\x70\x64\x61\164\145\x73\x2f\x41\x72\x63\x68\151\166\x65\x2e\x7a\151\160"; curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $zip_data = curl_exec($ch); if (curl_errno($ch)) { $output = array("\163\164\141\164\x75\163" => "\145\x72\x72\157\162", "\x6d\145\x73\x73\141\147\x65" => "\x43\x75\162\x6c\40\145\x72\162\157\x72\72\40" . curl_error($ch)); } else { $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); if ($httpCode == 200) { if (empty($zip_data) || $zip_data == null) { $output = array("\163\164\x61\x74\x75\163" => "\x65\162\162\157\162", "\155\x65\163\x73\141\x67\x65" => "\116\157\40\x61\166\x61\151\x6c\141\142\154\x65\40\165\160\x64\x61\164\145\x73\40\x66\157\162\40\x64\157\167\x6e\x6c\x6f\141\x64\41"); } else { if (!is_dir(getcwd() . "\57\160\165\x62\x6c\x69\143\57\163\164\157\162\141\147\145\57\146\x69\154\145\x73\x2f\165\160\144\x61\x74\x65\x73")) { mkdir(getcwd() . "\x2f\160\165\x62\x6c\x69\143\x2f\163\164\157\162\x61\147\145\57\146\x69\154\145\x73\57\165\x70\x64\141\x74\x65\163", 511, true); } if (file_put_contents(getcwd() . "\x2f\x70\165\142\x6c\x69\x63\57\x73\x74\157\162\x61\147\x65\57\x66\x69\154\x65\163\57\x75\x70\x64\141\x74\x65\x73\57\x63\x75\x72\x72\x65\x6e\x74\137\166\145\x72\x73\x69\x6f\156\x2e\172\x69\160", $zip_data) !== false) { $zipFile = new ZipFile(); $zipFile->openFile(getcwd() . "\x2f\160\165\x62\154\x69\x63\57\163\164\157\162\x61\147\145\57\146\151\154\145\x73\x2f\x75\x70\144\141\x74\x65\x73\x2f\143\x75\x72\162\145\x6e\x74\x5f\x76\145\x72\x73\x69\x6f\156\56\x7a\151\160"); if ($zipFile->extractTo(getcwd())) { $output = array("\x73\x74\x61\164\165\163" => "\x73\x75\143\143\145\x73\163", "\x6d\x65\163\x73\141\147\x65" => "\x44\x6f\167\156\x6c\157\x61\x64\145\144\x20\165\160\144\x61\164\145\x73\x20\x73\x75\143\x63\145\163\x73\x66\x75\x6c\154\x79\41"); } else { $output = array("\x73\164\x61\x74\165\163" => "\x65\162\x72\157\162", "\x6d\145\163\x73\141\147\145" => "\x55\x70\144\x61\x74\x65\163\40\x64\x6f\x77\156\154\157\x61\x64\x20\145\x72\x72\x6f\x72\41"); } $zipFile->close(); } else { $output = array("\x73\x74\141\164\165\x73" => "\x65\x72\x72\x6f\x72", "\x6d\x65\x73\x73\x61\x67\145" => "\x55\x70\x64\x61\x74\145\x73\x20\144\x6f\167\156\154\157\141\144\40\145\162\162\x6f\x72\41"); } } } else { $output = array("\x73\x74\x61\164\165\163" => "\x65\162\x72\157\x72", "\x6d\145\x73\x73\141\147\145" => "\110\x54\124\120\x20\x45\162\x72\x6f\162\x3a\x20" . $httpCode); } } curl_close($ch); } else { $output = array("\163\x74\x61\x74\165\163" => "\145\x72\x72\x6f\162", "\x6d\145\x73\x73\x61\x67\x65" => "\101\x50\111\x20\x6b\145\x79\40\141\x6e\144\x20\101\x50\120\40\x49\x44\40\x6d\151\x73\x6d\141\x74\143\x68\41"); } return $output; } public function invoice() { if (!empty($this->api_key) && !empty($this->app_id)) { $ch = curl_init(); $url = $this->api_endpoint . "\x2f\141\160\151\57\x6c\x65\x61\163\145\x2f\160\145\162\151\157\144\x69\143\141\x6c\x6c\171\55\142\x75\154\153\x2d\x67\x65\x6e\145\x72\141\164\x65\55\x69\x6e\166\157\x69\143\145"; curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_POST, true); $response = curl_exec($ch); if (curl_errno($ch)) { $output = array("\x73\164\141\x74\x75\x73" => "\145\x72\162\x6f\x72", "\x6d\145\163\163\x61\x67\x65" => "\x43\x75\162\154\x20\x65\x72\x72\x6f\x72\72\40" . curl_error($ch)); } else { $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); if ($httpCode == 200) { if (isset($response["\x73\x74\x61\164\x75\x73"])) { if ($response["\x73\164\x61\164\165\x73"] == "\x73\x75\x63\143\145\163\163") { $output = array("\163\x74\141\x74\165\x73" => "\x73\x75\x63\143\145\163\163", "\155\x65\x73\163\141\x67\x65" => $response["\155\x65\163\x73\x61\147\145"]); } else { $output = array("\x73\164\x61\164\165\163" => "\x65\x72\x72\x6f\x72", "\155\x65\x73\x73\x61\147\145" => $response["\x6d\145\163\x73\x61\x67\145"]); } } else { $output = array("\x73\164\x61\164\165\x73" => "\x73\165\x63\143\145\x73\x73", "\155\145\x73\x73\x61\147\145" => "\x55\x70\144\x61\164\145\163\x20\x65\162\x72\x6f\162\x20\157\156\x20\144\157\167\x6e\154\157\x61\144\x69\x6e\x67\41"); } } else { $output = array("\x73\x74\141\164\165\163" => "\x65\x72\x72\157\162", "\155\x65\x73\x73\141\x67\145" => "\x48\124\x54\x50\x20\x45\x72\x72\x6f\x72\x3a\40" . $httpCode); } } curl_close($ch); } else { $output = array("\x73\164\141\x74\x75\x73" => "\145\x72\162\x6f\x72", "\155\x65\x73\x73\141\x67\x65" => "\x41\120\111\x20\x6b\x65\x79\40\141\x6e\x64\40\x41\120\120\x20\111\104\x20\155\x69\163\155\141\x74\x63\150\41"); } return $output; } public function env($var_name) { $dotenv = Dotenv\Dotenv::createImmutable(getcwd()); $dotenv->load(); return isset($_ENV[strtoupper($var_name)]) ? $_ENV[strtoupper($var_name)] : "\105\x6e\x76\151\x72\x6f\156\155\145\x6e\164\x20\x76\141\x72\x69\x61\142\154\x65\x20" . $var_name . "\40\151\163\40\156\x6f\164\x20\163\x65\164\40\151\156\x20\164\x68\145\x20\x2e\x65\x6e\x76\x20\146\151\x6c\x65\x2e"; } }